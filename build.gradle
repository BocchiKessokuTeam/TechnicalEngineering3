plugins {
    id 'maven-publish'
	id 'org.quiltmc.loom' version '1.+'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

loom {
	accessWidenerPath = file("src/main/resources/ten3.accesswidener")
}

repositories {
	maven { url "https://api.modrinth.com/maven" }
	maven { url "https://maven.terraformersmc.com/releases/" }
    mavenCentral()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings(loom.officialMojangMappings())
	modImplementation "org.quiltmc:quilt-loader:${project.loader_version}"

	modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${project.qfapi_version}"

    modImplementation include("maven.modrinth:forge-config-api-port:${project.forgeconfigapiport_version}")

    implementation "com.electronwill.night-config:core:3.6.5"
    implementation "com.electronwill.night-config:toml:3.6.5"

    include modApi("teamreborn:energy:${project.energyapi_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    modImplementation "dev.emi:emi:${project.emi_version}"
}

processResources {
    inputs.property 'version', version

    filesMatching('quilt.mod.json') {
        expand "version": version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
    it.options.release = 17
}

java {
    withSourcesJar()
}

jar {
    filesMatching('LICENSE') {
        rename '^(LICENSE.*?)(\\..*)?$', "\$1_${archivesBaseName}\$2"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {

    }
}


